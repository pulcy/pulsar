#!/bin/bash
# Subliminl development tools root script

export SUBLIMINL_ME=`readlink -f $0`
export SUBLIMINL_DIR=`dirname $SUBLIMINL_ME`
export SUBLIMINL_ROOT=${SUBLIMINL_ROOT:=~/.subliminl}

[[ -f $SUBLIMINL_ROOT/.env ]] && source $SUBLIMINL_ROOT/.env

registryhost=arvika.subliminl.com
tunnelsocket=~/.ssh-tunnel-subliminl-registry

# Open SSH tunnel
function openTunnel {
	if [ ! -e $tunnelsocket ]; then
	    ssh -L5000:localhost:5000 -L16012:localhost:16012 -L16073:localhost:16073 -f -N -M -S $tunnelsocket admin@$registryhost
	fi
}

# Close SSH tunnel
function closeTunnel {
	if [ -e $tunnelsocket ]; then
		ssh -S $tunnelsocket -O exit admin@$registryhost
	fi
}

case "$1" in
	images)
	docker images
	;;

	install)
	mkdir -p $HOME/bin
    ln -sf $SUBLIMINL_ME $HOME/bin/subliminl
    npm set registry http://arvika-ssh:16012
    echo "Run 'npm adduser --registry http://arvika-ssh:16073' if you need to publish NPM packages"
    ;;

	push)
	openTunnel
	docker tag $2 arvika-ssh:5000/$2
	docker push arvika-ssh:5000/$2
	docker rmi arvika-ssh:5000/$2
	;;

	pull)
	openTunnel
	docker pull arvika-ssh:5000/$2
	docker tag arvika-ssh:5000/$2 $2
	docker rmi arvika-ssh:5000/$2
	;;

	tunnel)
	openTunnel
	;;

	close-tunnel)
	closeTunnel
	;;

	help)
	cat <<EOF
    help                               Print a list of commands
    install                            Install a link to this script in ~/bin
    push LOCAL-IMAGE-NAME              Push a docker image to the registry
    pull LOCAL-IMAGE-NAME              Pull a docker images from the registry
    close-tunnel                       Close any existing SSH tunnel to arvika.subliminl.com
    tunnel                             Open aan SSH tunnel to arvika.subliminl.com (named arvika-ssh)
EOF
	;;

	*)
	$0 help
	;;
esac

